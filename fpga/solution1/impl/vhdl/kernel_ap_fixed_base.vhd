-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_ap_fixed_base is
port (
    ap_ready : OUT STD_LOGIC;
    d : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel_ap_fixed_base is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_1B : STD_LOGIC_VECTOR (11 downto 0) := "000000011011";
    constant ap_const_lv12_FE5 : STD_LOGIC_VECTOR (11 downto 0) := "111111100101";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal bitcast_ln724_fu_48_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp9_fu_64_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_52_fu_78_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_39_cast_cast_cast_fu_82_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_39_cast_cast_cast_cast_fu_90_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_56_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i_i_fu_94_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal empty_fu_52_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal conv3_i_i_fu_74_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_fu_114_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp29_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub30_fu_126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub31_fu_132_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal cond_fu_138_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_0_fu_100_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_181_fu_166_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_53_fu_156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond_cast_fu_146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_prom_cast_cast_cast_cast_fu_196_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal shr_fu_200_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal cmp_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_fu_210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_cmp_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp32_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_cast_fu_230_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_demorgan_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_demorgan_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_fu_188_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp40_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_54_fu_206_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_fu_264_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= 
        empty_54_fu_206_p1 when (sel_tmp14_fu_284_p2(0) = '1') else 
        sel_tmp9_fu_264_p3;
    bitcast_ln724_fu_48_p1 <= d;
    cmp29_fu_120_p2 <= "1" when (signed(sub_fu_114_p2) > signed(ap_const_lv12_1B)) else "0";
    cmp32_fu_150_p2 <= "1" when (sub_fu_114_p2 = ap_const_lv12_1B) else "0";
    cmp40_fu_160_p2 <= "1" when (unsigned(cond_fu_138_p3) < unsigned(ap_const_lv12_36)) else "0";
    cmp_fu_108_p2 <= "1" when (empty_fu_52_p1 = ap_const_lv63_0) else "0";
        cond_cast_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cond_fu_138_p3),32));

    cond_fu_138_p3 <= 
        sub30_fu_126_p2 when (cmp29_fu_120_p2(0) = '1') else 
        sub31_fu_132_p2;
    conv3_i_i_fu_74_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_fu_64_p4),12));
    empty_52_fu_78_p1 <= bitcast_ln724_fu_48_p1(52 - 1 downto 0);
    empty_53_fu_156_p1 <= man_0_fu_100_p3(32 - 1 downto 0);
    empty_54_fu_206_p1 <= shr_fu_200_p2(32 - 1 downto 0);
    empty_fu_52_p1 <= bitcast_ln724_fu_48_p1(63 - 1 downto 0);
    icmp_fu_176_p2 <= "1" when (tmp_181_fu_166_p4 = ap_const_lv7_0) else "0";
    man_0_fu_100_p3 <= 
        sub_i_i_fu_94_p2 when (tmp_fu_56_p3(0) = '1') else 
        tmp_39_cast_cast_cast_cast_fu_90_p1;
    not_cmp_fu_218_p2 <= (cmp_fu_108_p2 xor ap_const_lv1_1);
    sel_tmp12_fu_272_p2 <= (sel_tmp6_demorgan_fu_252_p2 xor ap_const_lv1_1);
    sel_tmp14_fu_284_p2 <= (tmp16_fu_278_p2 and cmp29_fu_120_p2);
    sel_tmp2_fu_238_p2 <= (not_cmp_fu_218_p2 and cmp32_fu_150_p2);
    sel_tmp3_fu_244_p3 <= 
        empty_53_fu_156_p1 when (sel_tmp2_fu_238_p2(0) = '1') else 
        sel_tmp_cast_fu_230_p3;
    sel_tmp6_demorgan_fu_252_p2 <= (cmp_fu_108_p2 or cmp32_fu_150_p2);
    sel_tmp8_demorgan_fu_258_p2 <= (sel_tmp6_demorgan_fu_252_p2 or cmp29_fu_120_p2);
    sel_tmp9_fu_264_p3 <= 
        sel_tmp3_fu_244_p3 when (sel_tmp8_demorgan_fu_258_p2(0) = '1') else 
        storemerge_fu_188_p3;
    sel_tmp_cast_fu_230_p3 <= 
        ap_const_lv32_FFFFFFFF when (sel_tmp_fu_224_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp_fu_224_p2 <= (tmp_182_fu_210_p3 and not_cmp_fu_218_p2);
    sh_prom_cast_cast_cast_cast_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cond_cast_fu_146_p1),54));
    shl_fu_182_p2 <= std_logic_vector(shift_left(unsigned(empty_53_fu_156_p1),to_integer(unsigned('0' & cond_cast_fu_146_p1(31-1 downto 0)))));
    shr_fu_200_p2 <= std_logic_vector(shift_right(signed(man_0_fu_100_p3),to_integer(unsigned('0' & sh_prom_cast_cast_cast_cast_fu_196_p1(31-1 downto 0)))));
    storemerge_fu_188_p3 <= 
        shl_fu_182_p2 when (icmp_fu_176_p2(0) = '1') else 
        ap_const_lv32_0;
    sub30_fu_126_p2 <= std_logic_vector(unsigned(sub_fu_114_p2) + unsigned(ap_const_lv12_FE5));
    sub31_fu_132_p2 <= std_logic_vector(unsigned(ap_const_lv12_1B) - unsigned(sub_fu_114_p2));
    sub_fu_114_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(conv3_i_i_fu_74_p1));
    sub_i_i_fu_94_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(tmp_39_cast_cast_cast_cast_fu_90_p1));
    tmp16_fu_278_p2 <= (sel_tmp12_fu_272_p2 and cmp40_fu_160_p2);
    tmp9_fu_64_p4 <= bitcast_ln724_fu_48_p1(62 downto 52);
    tmp_181_fu_166_p4 <= cond_fu_138_p3(11 downto 5);
    tmp_182_fu_210_p3 <= bitcast_ln724_fu_48_p1(63 downto 63);
    tmp_39_cast_cast_cast_cast_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_cast_cast_cast_fu_82_p3),54));
    tmp_39_cast_cast_cast_fu_82_p3 <= (ap_const_lv1_1 & empty_52_fu_78_p1);
    tmp_fu_56_p3 <= bitcast_ln724_fu_48_p1(63 downto 63);
end behav;
