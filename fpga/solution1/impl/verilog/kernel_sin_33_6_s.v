// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_sin_33_6_s (
        ap_clk,
        ap_rst,
        x_val,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [32:0] x_val;
output  [28:0] ap_return;

wire   [0:0] sign0_fu_75_p2;
reg   [0:0] sign0_reg_267;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] sign0_reg_267_pp0_iter1_reg;
reg   [0:0] sign0_reg_267_pp0_iter2_reg;
reg   [0:0] sign0_reg_267_pp0_iter3_reg;
reg   [0:0] sign0_reg_267_pp0_iter4_reg;
reg   [0:0] sign0_reg_267_pp0_iter5_reg;
reg   [0:0] sign0_reg_267_pp0_iter6_reg;
reg   [0:0] sign0_reg_267_pp0_iter7_reg;
reg   [5:0] kint_reg_272;
reg   [1:0] k_reg_277;
wire   [27:0] trunc_ln68_fu_120_p1;
reg   [27:0] trunc_ln68_reg_284;
wire   [0:0] icmp_ln251_1_fu_166_p2;
reg   [0:0] icmp_ln251_1_reg_289;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter2_reg;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter3_reg;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter4_reg;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter5_reg;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter6_reg;
reg   [0:0] icmp_ln251_1_reg_289_pp0_iter7_reg;
wire   [33:0] z_fu_201_p3;
reg   [33:0] z_reg_294;
wire   [0:0] icmp_ln274_fu_209_p2;
reg   [0:0] icmp_ln274_reg_299;
reg   [0:0] icmp_ln274_reg_299_pp0_iter2_reg;
reg   [0:0] icmp_ln274_reg_299_pp0_iter3_reg;
reg   [0:0] icmp_ln274_reg_299_pp0_iter4_reg;
reg   [0:0] icmp_ln274_reg_299_pp0_iter5_reg;
reg   [0:0] icmp_ln274_reg_299_pp0_iter6_reg;
reg   [0:0] icmp_ln274_reg_299_pp0_iter7_reg;
wire   [33:0] grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return;
reg    grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call23;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call23;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call23;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call23;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call23;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call23;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call23;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call23;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call23;
wire    ap_block_pp0_stage0_11001_ignoreCallOp34;
wire    ap_block_pp0_stage0;
wire   [5:0] mul_ln68_fu_65_p0;
wire   [33:0] mul_ln68_fu_65_p1;
wire   [32:0] mul_ln64_fu_70_p0;
wire   [40:0] mul_ln64_fu_70_p1;
wire   [32:0] sub_ln237_fu_81_p2;
wire   [32:0] in_fu_87_p3;
wire   [72:0] mul_ln64_fu_70_p2;
wire   [34:0] shl_ln_fu_128_p3;
wire   [34:0] mul_ln68_fu_65_p2;
wire   [34:0] add_ln68_fu_135_p2;
wire   [33:0] r_fu_141_p4;
wire   [34:0] zext_ln68_1_fu_151_p1;
wire   [0:0] icmp_ln251_fu_161_p2;
wire   [34:0] sub_ln254_fu_155_p2;
wire   [32:0] tmp_2_fu_187_p4;
wire   [0:0] or_ln251_fu_171_p2;
wire   [33:0] tmp_1_fu_177_p4;
wire   [33:0] zext_ln251_fu_197_p1;
wire   [33:0] sub_ln274_fu_224_p2;
wire   [28:0] trunc_ln_fu_214_p4;
wire   [28:0] trunc_ln1_fu_230_p4;
wire   [28:0] select_ln274_fu_240_p3;
wire   [28:0] select_ln274_1_fu_247_p3;
wire   [28:0] sub_ln292_fu_254_p2;
reg   [32:0] x_val_int_reg;
wire   [72:0] mul_ln64_fu_70_p00;
wire   [34:0] mul_ln68_fu_65_p00;
wire    ap_ce_reg;

kernel_cordic_circ_apfixed_35_3_0_s grp_cordic_circ_apfixed_35_3_0_s_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .z_read(z_reg_294),
    .ap_return(grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return),
    .ap_ce(grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce)
);

kernel_mul_6ns_34ns_35_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 35 ))
mul_6ns_34ns_35_1_1_U3(
    .din0(mul_ln68_fu_65_p0),
    .din1(mul_ln68_fu_65_p1),
    .dout(mul_ln68_fu_65_p2)
);

kernel_mul_33ns_41ns_73_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 73 ))
mul_33ns_41ns_73_1_1_U4(
    .din0(mul_ln64_fu_70_p0),
    .din1(mul_ln64_fu_70_p1),
    .dout(mul_ln64_fu_70_p2)
);

always @ (posedge ap_clk) begin
    x_val_int_reg <= x_val;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln251_1_reg_289 <= icmp_ln251_1_fu_166_p2;
        icmp_ln251_1_reg_289_pp0_iter2_reg <= icmp_ln251_1_reg_289;
        icmp_ln251_1_reg_289_pp0_iter3_reg <= icmp_ln251_1_reg_289_pp0_iter2_reg;
        icmp_ln251_1_reg_289_pp0_iter4_reg <= icmp_ln251_1_reg_289_pp0_iter3_reg;
        icmp_ln251_1_reg_289_pp0_iter5_reg <= icmp_ln251_1_reg_289_pp0_iter4_reg;
        icmp_ln251_1_reg_289_pp0_iter6_reg <= icmp_ln251_1_reg_289_pp0_iter5_reg;
        icmp_ln251_1_reg_289_pp0_iter7_reg <= icmp_ln251_1_reg_289_pp0_iter6_reg;
        icmp_ln274_reg_299 <= icmp_ln274_fu_209_p2;
        icmp_ln274_reg_299_pp0_iter2_reg <= icmp_ln274_reg_299;
        icmp_ln274_reg_299_pp0_iter3_reg <= icmp_ln274_reg_299_pp0_iter2_reg;
        icmp_ln274_reg_299_pp0_iter4_reg <= icmp_ln274_reg_299_pp0_iter3_reg;
        icmp_ln274_reg_299_pp0_iter5_reg <= icmp_ln274_reg_299_pp0_iter4_reg;
        icmp_ln274_reg_299_pp0_iter6_reg <= icmp_ln274_reg_299_pp0_iter5_reg;
        icmp_ln274_reg_299_pp0_iter7_reg <= icmp_ln274_reg_299_pp0_iter6_reg;
        k_reg_277 <= {{mul_ln64_fu_70_p2[68:67]}};
        kint_reg_272 <= {{mul_ln64_fu_70_p2[72:67]}};
        sign0_reg_267 <= sign0_fu_75_p2;
        sign0_reg_267_pp0_iter1_reg <= sign0_reg_267;
        sign0_reg_267_pp0_iter2_reg <= sign0_reg_267_pp0_iter1_reg;
        sign0_reg_267_pp0_iter3_reg <= sign0_reg_267_pp0_iter2_reg;
        sign0_reg_267_pp0_iter4_reg <= sign0_reg_267_pp0_iter3_reg;
        sign0_reg_267_pp0_iter5_reg <= sign0_reg_267_pp0_iter4_reg;
        sign0_reg_267_pp0_iter6_reg <= sign0_reg_267_pp0_iter5_reg;
        sign0_reg_267_pp0_iter7_reg <= sign0_reg_267_pp0_iter6_reg;
        trunc_ln68_reg_284 <= trunc_ln68_fu_120_p1;
        z_reg_294 <= z_fu_201_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp34)) begin
        grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce = 1'b1;
    end else begin
        grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce = 1'b0;
    end
end

assign add_ln68_fu_135_p2 = (shl_ln_fu_128_p3 + mul_ln68_fu_65_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp34 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_return = ((sign0_reg_267_pp0_iter7_reg[0:0] == 1'b1) ? select_ln274_1_fu_247_p3 : sub_ln292_fu_254_p2);

assign icmp_ln251_1_fu_166_p2 = ((k_reg_277 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln251_fu_161_p2 = ((k_reg_277 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln274_fu_209_p2 = ((k_reg_277 == 2'd0) ? 1'b1 : 1'b0);

assign in_fu_87_p3 = ((sign0_fu_75_p2[0:0] == 1'b1) ? x_val_int_reg : sub_ln237_fu_81_p2);

assign mul_ln64_fu_70_p0 = mul_ln64_fu_70_p00;

assign mul_ln64_fu_70_p00 = in_fu_87_p3;

assign mul_ln64_fu_70_p1 = 73'd699970842190;

assign mul_ln68_fu_65_p0 = mul_ln68_fu_65_p00;

assign mul_ln68_fu_65_p00 = kint_reg_272;

assign mul_ln68_fu_65_p1 = 35'd7373662959;

assign or_ln251_fu_171_p2 = (icmp_ln251_fu_161_p2 | icmp_ln251_1_fu_166_p2);

assign r_fu_141_p4 = {{add_ln68_fu_135_p2[34:1]}};

assign select_ln274_1_fu_247_p3 = ((icmp_ln274_reg_299_pp0_iter7_reg[0:0] == 1'b1) ? trunc_ln_fu_214_p4 : select_ln274_fu_240_p3);

assign select_ln274_fu_240_p3 = ((icmp_ln251_1_reg_289_pp0_iter7_reg[0:0] == 1'b1) ? trunc_ln_fu_214_p4 : trunc_ln1_fu_230_p4);

assign shl_ln_fu_128_p3 = {{trunc_ln68_reg_284}, {7'd0}};

assign sign0_fu_75_p2 = (($signed(x_val_int_reg) > $signed(33'd0)) ? 1'b1 : 1'b0);

assign sub_ln237_fu_81_p2 = (33'd0 - x_val_int_reg);

assign sub_ln254_fu_155_p2 = (35'd13493037704 - zext_ln68_1_fu_151_p1);

assign sub_ln274_fu_224_p2 = (34'd0 - grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return);

assign sub_ln292_fu_254_p2 = (29'd0 - select_ln274_1_fu_247_p3);

assign tmp_1_fu_177_p4 = {{sub_ln254_fu_155_p2[34:1]}};

assign tmp_2_fu_187_p4 = {{add_ln68_fu_135_p2[34:2]}};

assign trunc_ln1_fu_230_p4 = {{sub_ln274_fu_224_p2[33:5]}};

assign trunc_ln68_fu_120_p1 = in_fu_87_p3[27:0];

assign trunc_ln_fu_214_p4 = {{grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return[33:5]}};

assign z_fu_201_p3 = ((or_ln251_fu_171_p2[0:0] == 1'b1) ? tmp_1_fu_177_p4 : zext_ln251_fu_197_p1);

assign zext_ln251_fu_197_p1 = tmp_2_fu_187_p4;

assign zext_ln68_1_fu_151_p1 = r_fu_141_p4;

endmodule //kernel_sin_33_6_s
