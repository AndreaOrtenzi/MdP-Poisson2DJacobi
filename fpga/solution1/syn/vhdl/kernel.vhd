-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel_kernel,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=7380,HLS_SYN_LUT=7304,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (52 downto 0) := "00000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (52 downto 0) := "00000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (52 downto 0) := "00000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (52 downto 0) := "00000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (52 downto 0) := "00000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (52 downto 0) := "00000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (52 downto 0) := "00001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (52 downto 0) := "00010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (52 downto 0) := "00100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (52 downto 0) := "01000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (52 downto 0) := "10000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv64_3EF4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011110100111110001011010110001000111000110110100011110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv64_3F70000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111101110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_708 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000011100001000";
    constant ap_const_lv64_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001000";
    constant ap_const_lv64_788 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000011110001000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv18_30D40 : STD_LOGIC_VECTOR (17 downto 0) := "110000110101000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal v : STD_LOGIC_VECTOR (63 downto 0);
    signal convFPGA : STD_LOGIC_VECTOR (63 downto 0);
    signal numIter : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal numIter_read_reg_545 : STD_LOGIC_VECTOR (63 downto 0);
    signal convFPGA_read_reg_550 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_read_reg_556 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_591 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln1_reg_602 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln97_1_reg_607 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln97_2_reg_612 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal n_1_reg_622 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal or_ln65_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_addr_reg_635 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln65_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln121_fu_446_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln121_reg_641 : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_addr_1_reg_647 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_reg_662 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln121_fu_504_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_reg_675 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_2_fu_521_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln121_2_reg_680 : STD_LOGIC_VECTOR (24 downto 0);
    signal vp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal vp_ce0 : STD_LOGIC;
    signal vp_we0 : STD_LOGIC;
    signal vp_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_ce0 : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_we0 : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_e_2_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_e_2_out_ap_vld : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_ce : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_ce : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_ce0 : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_w_3_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_w_3_out_ap_vld : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_ce : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_w_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_w_1_out_ap_vld : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_ce : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_idle : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_ready : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out_ap_vld : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_ce : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sext_ln27_fu_301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln120_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln121_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state47_io : BOOLEAN;
    signal zext_ln62_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln121_3_fu_527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_fu_134 : STD_LOGIC_VECTOR (17 downto 0);
    signal n_2_fu_416_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal e_fu_138 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_272_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln65_fu_311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln65_1_fu_316_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln65_2_fu_321_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln65_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_366_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln65_fu_376_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln65_2_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_1_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln65_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln3_fu_427_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln121_1_fu_449_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal and_ln121_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln121_1_fu_501_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_1_fu_510_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln121_fu_497_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln121_2_fu_517_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_267_ce : STD_LOGIC;
    signal grp_fu_276_ce : STD_LOGIC;
    signal grp_fu_276_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_685_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_685_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_685_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_685_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (52 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln27 : IN STD_LOGIC_VECTOR (60 downto 0) );
    end component;


    component kernel_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        v : IN STD_LOGIC_VECTOR (63 downto 0);
        vp_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        vp_ce0 : OUT STD_LOGIC;
        vp_we0 : OUT STD_LOGIC;
        vp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        e_2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        e_2_out_ap_vld : OUT STD_LOGIC;
        grp_fu_685_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_685_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_ce : OUT STD_LOGIC;
        grp_fu_267_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_267_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_267_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_267_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vp_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        vp_ce0 : OUT STD_LOGIC;
        vp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        v : IN STD_LOGIC_VECTOR (63 downto 0);
        w_3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_3_out_ap_vld : OUT STD_LOGIC;
        grp_fu_685_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_685_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_kernel_Pipeline_VITIS_LOOP_97_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        w_3_reload : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln97 : IN STD_LOGIC_VECTOR (60 downto 0);
        v : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln97_1 : IN STD_LOGIC_VECTOR (60 downto 0);
        sext_ln65 : IN STD_LOGIC_VECTOR (60 downto 0);
        w_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_1_out_ap_vld : OUT STD_LOGIC;
        grp_fu_685_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_685_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_kernel_Pipeline_VITIS_LOOP_104_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        w_1_reload : IN STD_LOGIC_VECTOR (63 downto 0);
        v : IN STD_LOGIC_VECTOR (63 downto 0);
        w_5_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_5_out_ap_vld : OUT STD_LOGIC;
        grp_fu_685_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_685_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_685_p_ce : OUT STD_LOGIC );
    end component;


    component kernel_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_ddiv_64ns_64ns_64_22_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel_dadddsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_vp_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        v : OUT STD_LOGIC_VECTOR (63 downto 0);
        convFPGA : OUT STD_LOGIC_VECTOR (63 downto 0);
        numIter : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component kernel_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component kernel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    vp_U : component kernel_vp_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => vp_address0,
        ce0 => vp_ce0,
        we0 => vp_we0,
        d0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_d0,
        q0 => vp_q0);

    grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219 : component kernel_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln27 => trunc_ln_reg_591);

    grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226 : component kernel_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        v => v_read_reg_556,
        vp_address0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_address0,
        vp_ce0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_ce0,
        vp_we0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_we0,
        vp_d0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_d0,
        e_2_out => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_e_2_out,
        e_2_out_ap_vld => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_e_2_out_ap_vld,
        grp_fu_685_p_din0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din0,
        grp_fu_685_p_din1 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din1,
        grp_fu_685_p_opcode => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_opcode,
        grp_fu_685_p_dout0 => grp_fu_685_p2,
        grp_fu_685_p_ce => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_ce,
        grp_fu_267_p_din0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din0,
        grp_fu_267_p_din1 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din1,
        grp_fu_267_p_dout0 => grp_fu_267_p2,
        grp_fu_267_p_ce => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_ce);

    grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237 : component kernel_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        vp_address0 => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_address0,
        vp_ce0 => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_ce0,
        vp_q0 => vp_q0,
        v => v_read_reg_556,
        w_3_out => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_w_3_out,
        w_3_out_ap_vld => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_w_3_out_ap_vld,
        grp_fu_685_p_din0 => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din0,
        grp_fu_685_p_din1 => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din1,
        grp_fu_685_p_opcode => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_opcode,
        grp_fu_685_p_dout0 => grp_fu_685_p2,
        grp_fu_685_p_ce => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_ce);

    grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246 : component kernel_kernel_Pipeline_VITIS_LOOP_97_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        w_3_reload => grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_w_3_out,
        sext_ln97 => trunc_ln1_reg_602,
        v => v_read_reg_556,
        sext_ln97_1 => trunc_ln97_1_reg_607,
        sext_ln65 => trunc_ln97_2_reg_612,
        w_1_out => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_w_1_out,
        w_1_out_ap_vld => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_w_1_out_ap_vld,
        grp_fu_685_p_din0 => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din0,
        grp_fu_685_p_din1 => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din1,
        grp_fu_685_p_opcode => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_opcode,
        grp_fu_685_p_dout0 => grp_fu_685_p2,
        grp_fu_685_p_ce => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_ce);

    grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258 : component kernel_kernel_Pipeline_VITIS_LOOP_104_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start,
        ap_done => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done,
        ap_idle => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_idle,
        ap_ready => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_ready,
        m_axi_gmem0_AWVALID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        w_1_reload => grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_w_1_out,
        v => v_read_reg_556,
        w_5_out => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out,
        w_5_out_ap_vld => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out_ap_vld,
        grp_fu_685_p_din0 => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din0,
        grp_fu_685_p_din1 => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din1,
        grp_fu_685_p_opcode => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_opcode,
        grp_fu_685_p_dout0 => grp_fu_685_p2,
        grp_fu_685_p_ce => grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_ce);

    control_s_axi_U : component kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        v => v,
        convFPGA => convFPGA,
        numIter => numIter,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component kernel_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 64,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARLEN => gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => gmem0_AWADDR,
        I_AWLEN => gmem0_AWLEN,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => gmem0_WDATA,
        I_WSTRB => gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY);

    gmem1_m_axi_U : component kernel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => gmem1_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem1_RDATA,
        I_RFIFONUM => gmem1_RFIFONUM,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => gmem1_AWADDR,
        I_AWLEN => ap_const_lv32_1,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => gmem1_WDATA,
        I_WSTRB => gmem1_WSTRB,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY);

    dmul_64ns_64ns_64_5_max_dsp_1_U30 : component kernel_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_267_p0,
        din1 => grp_fu_267_p1,
        ce => grp_fu_267_ce,
        dout => grp_fu_267_p2);

    ddiv_64ns_64ns_64_22_no_dsp_1_U31 : component kernel_ddiv_64ns_64ns_64_22_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 22,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_e_2_out,
        din1 => w_reg_662,
        ce => ap_const_logic_1,
        dout => grp_fu_272_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U32 : component kernel_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => e_fu_138,
        din1 => ap_const_lv64_3EE4F8B588E368F1,
        ce => grp_fu_276_ce,
        opcode => grp_fu_276_opcode,
        dout => grp_fu_276_p2);

    dadddsub_64ns_64ns_64_5_full_dsp_1_U33 : component kernel_dadddsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_685_p0,
        din1 => grp_fu_685_p1,
        opcode => grp_fu_685_opcode,
        ce => grp_fu_685_ce,
        dout => grp_fu_685_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    e_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                e_fu_138 <= ap_const_lv64_3EF4F8B588E368F1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                e_fu_138 <= grp_fu_272_p2;
            end if; 
        end if;
    end process;

    n_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_fu_134 <= ap_const_lv18_0;
            elsif (((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                n_fu_134 <= n_2_fu_416_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                convFPGA_read_reg_550 <= convFPGA;
                numIter_read_reg_545 <= numIter;
                trunc_ln_reg_591 <= v(63 downto 3);
                v_read_reg_556 <= v;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                gmem1_addr_1_reg_647 <= sext_ln121_fu_458_p1;
                gmem1_addr_reg_635 <= sext_ln120_fu_436_p1;
                trunc_ln121_reg_641 <= trunc_ln121_fu_446_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                n_1_reg_622 <= n_fu_134;
                or_ln65_reg_627 <= or_ln65_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                shl_ln121_2_reg_680 <= shl_ln121_2_fu_521_p2;
                shl_ln121_reg_675 <= shl_ln121_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                tmp_4_reg_670 <= grp_fu_276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                trunc_ln1_reg_602 <= add_ln65_fu_311_p2(63 downto 3);
                trunc_ln97_1_reg_607 <= add_ln65_1_fu_316_p2(63 downto 3);
                trunc_ln97_2_reg_612 <= add_ln65_2_fu_321_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                w_reg_662 <= grp_fu_267_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state52, ap_CS_fsm_state48, ap_CS_fsm_state53, ap_CS_fsm_state11, and_ln65_fu_410_p2, grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done, grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done, gmem0_AWREADY, gmem0_BVALID, gmem1_AWREADY, gmem1_WREADY, gmem1_BVALID, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_block_state47_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((gmem0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_lv1_0 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state46 => 
                if (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (((ap_const_boolean_0 = ap_block_state47_io) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if (((gmem1_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln65_1_fu_316_p2 <= std_logic_vector(unsigned(v_read_reg_556) + unsigned(ap_const_lv64_88));
    add_ln65_2_fu_321_p2 <= std_logic_vector(unsigned(v_read_reg_556) + unsigned(ap_const_lv64_788));
    add_ln65_fu_311_p2 <= std_logic_vector(unsigned(v_read_reg_556) + unsigned(ap_const_lv64_708));
    and_ln121_fu_493_p2 <= (tmp_4_reg_670 and or_ln65_reg_627);
    and_ln65_1_fu_398_p2 <= (or_ln65_fu_392_p2 and grp_fu_276_p2);
    and_ln65_fu_410_p2 <= (icmp_ln65_fu_404_p2 and and_ln65_1_fu_398_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem0_AWREADY)
    begin
        if ((gmem0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;

    ap_ST_fsm_state46_blk_assign_proc : process(gmem1_AWREADY)
    begin
        if ((gmem1_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state47_blk_assign_proc : process(ap_block_state47_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state47_io)) then 
            ap_ST_fsm_state47_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state47_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state48_blk_assign_proc : process(gmem1_WREADY)
    begin
        if ((gmem1_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state48_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state48_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done)
    begin
        if ((grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(gmem1_BVALID)
    begin
        if ((gmem1_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state53_blk_assign_proc : process(gmem1_BVALID)
    begin
        if ((gmem1_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(gmem0_BVALID)
    begin
        if ((gmem0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state47_io_assign_proc : process(gmem1_AWREADY, gmem1_WREADY)
    begin
                ap_block_state47_io <= ((gmem1_WREADY = ap_const_logic_0) or (gmem1_AWREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state53, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state53, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln65_fu_363_p1 <= e_fu_138;

    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state11, and_ln65_fu_410_p2, grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARADDR, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARADDR, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARADDR, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_ARADDR <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_ARADDR <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gmem0_ARADDR <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state11, and_ln65_fu_410_p2, grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLEN, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLEN, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLEN, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_ARLEN <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_ARLEN <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gmem0_ARLEN <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state11, and_ln65_fu_410_p2, grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARVALID, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARVALID, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARVALID, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_ARVALID <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_ARVALID <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gmem0_ARVALID <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWADDR_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWADDR, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWADDR, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWADDR, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWADDR, gmem0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, sext_ln27_fu_301_p1)
    begin
        if (((gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_AWADDR <= sext_ln27_fu_301_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_AWADDR <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_AWADDR <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_AWADDR <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_AWADDR <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWADDR;
        else 
            gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWLEN_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLEN, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLEN, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLEN, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLEN, gmem0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_AWLEN <= ap_const_lv32_100;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_AWLEN <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_AWLEN <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_AWLEN <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_AWLEN <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWLEN;
        else 
            gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state2, grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWVALID, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWVALID, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWVALID, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWVALID, gmem0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_AWVALID <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_AWVALID <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_AWVALID <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_AWVALID <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(ap_CS_fsm_state9, grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_BREADY, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_BREADY, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_BREADY, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_BREADY, gmem0_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((gmem0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_BREADY <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_BREADY <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_BREADY <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_BREADY <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state11, and_ln65_fu_410_p2, grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_RREADY, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_RREADY, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_RREADY, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_RREADY <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_RREADY <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_lv1_1 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            gmem0_RREADY <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WDATA_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WDATA, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WDATA, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WDATA, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WDATA, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_WDATA <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_WDATA <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_WDATA <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_WDATA <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WDATA;
        else 
            gmem0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_WSTRB_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WSTRB, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WSTRB, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WSTRB, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WSTRB, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_WSTRB <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_WSTRB <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_WSTRB <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_WSTRB <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WSTRB;
        else 
            gmem0_WSTRB <= "XXXXXXXX";
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WVALID, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WVALID, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WVALID, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WVALID, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem0_WVALID <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem0_WVALID <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            gmem0_WVALID <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem0_WVALID <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_AWADDR_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state47, gmem1_addr_reg_635, gmem1_addr_1_reg_647, gmem1_AWREADY, ap_block_state47_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state47_io) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem1_AWADDR <= gmem1_addr_1_reg_647;
        elsif (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            gmem1_AWADDR <= gmem1_addr_reg_635;
        else 
            gmem1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state47, gmem1_AWREADY, ap_block_state47_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state47_io) and (ap_const_logic_1 = ap_CS_fsm_state47)) or ((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            gmem1_AWVALID <= ap_const_logic_1;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state53, gmem1_BVALID)
    begin
        if ((((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then 
            gmem1_BREADY <= ap_const_logic_1;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_WDATA_assign_proc : process(ap_CS_fsm_state47, ap_CS_fsm_state48, zext_ln62_fu_489_p1, zext_ln121_3_fu_527_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            gmem1_WDATA <= zext_ln121_3_fu_527_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            gmem1_WDATA <= zext_ln62_fu_489_p1;
        else 
            gmem1_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_WSTRB_assign_proc : process(ap_CS_fsm_state47, ap_CS_fsm_state48, shl_ln121_reg_675)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            gmem1_WSTRB <= shl_ln121_reg_675;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            gmem1_WSTRB <= ap_const_lv4_F;
        else 
            gmem1_WSTRB <= "XXXX";
        end if; 
    end process;


    gmem1_WVALID_assign_proc : process(ap_CS_fsm_state47, ap_CS_fsm_state48, gmem1_WREADY, ap_block_state47_io)
    begin
        if ((((gmem1_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((ap_const_boolean_0 = ap_block_state47_io) and (ap_const_logic_1 = ap_CS_fsm_state47)))) then 
            gmem1_WVALID <= ap_const_logic_1;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state46, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_state52, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_state47, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_267_ce_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_ce, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_267_ce <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_ce;
        else 
            grp_fu_267_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_267_p0_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din0, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out, ap_CS_fsm_state12, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_267_p0 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_267_p0 <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_w_5_out;
        else 
            grp_fu_267_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_267_p1_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din1, ap_CS_fsm_state12, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_267_p1 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_267_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_267_p1 <= ap_const_lv64_3F70000000000000;
        else 
            grp_fu_267_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_276_ce_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state10, ap_CS_fsm_state11, gmem1_AWREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            grp_fu_276_ce <= ap_const_logic_1;
        else 
            grp_fu_276_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_276_opcode_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, and_ln65_fu_410_p2)
    begin
        if (((ap_const_lv1_0 = and_ln65_fu_410_p2) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_fu_276_opcode <= ap_const_lv5_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_276_opcode <= ap_const_lv5_2;
        else 
            grp_fu_276_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_685_ce_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_ce, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_ce, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_ce, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_ce, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_685_ce <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_685_ce <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_685_ce <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_685_ce <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_ce;
        else 
            grp_fu_685_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_685_opcode_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_opcode, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_opcode, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_opcode, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_opcode, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_685_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_685_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_685_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_685_opcode <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_opcode;
        else 
            grp_fu_685_opcode <= "XX";
        end if; 
    end process;


    grp_fu_685_p0_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din0, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din0, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din0, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_685_p0 <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_685_p0 <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_685_p0 <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_685_p0 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din0;
        else 
            grp_fu_685_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_685_p1_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din1, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din1, grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din1, grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din1, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_685_p1 <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_grp_fu_685_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_685_p1 <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_grp_fu_685_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_685_p1 <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_grp_fu_685_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_685_p1 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_grp_fu_685_p_din1;
        else 
            grp_fu_685_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_104_7_fu_258_ap_start_reg;
    grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_27_1_VITIS_LOOP_28_2_fu_219_ap_start_reg;
    grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_ap_start_reg;
    grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_ap_start_reg;
    grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start <= grp_kernel_Pipeline_VITIS_LOOP_97_6_fu_246_ap_start_reg;
    icmp_ln65_1_fu_380_p2 <= "0" when (tmp_1_fu_366_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln65_2_fu_386_p2 <= "1" when (trunc_ln65_fu_376_p1 = ap_const_lv52_0) else "0";
    icmp_ln65_fu_404_p2 <= "1" when (unsigned(n_fu_134) < unsigned(ap_const_lv18_30D40)) else "0";
    n_2_fu_416_p2 <= std_logic_vector(unsigned(n_fu_134) + unsigned(ap_const_lv18_1));
    or_ln65_fu_392_p2 <= (icmp_ln65_2_fu_386_p2 or icmp_ln65_1_fu_380_p2);
        sext_ln120_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_427_p4),64));

        sext_ln121_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln121_1_fu_449_p4),64));

        sext_ln27_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_591),64));

    shl_ln121_1_fu_510_p3 <= (trunc_ln121_reg_641 & ap_const_lv3_0);
    shl_ln121_2_fu_521_p2 <= std_logic_vector(shift_left(unsigned(zext_ln121_fu_497_p1),to_integer(unsigned('0' & zext_ln121_2_fu_517_p1(25-1 downto 0)))));
    shl_ln121_fu_504_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln121_1_fu_501_p1(4-1 downto 0)))));
    tmp_1_fu_366_p4 <= bitcast_ln65_fu_363_p1(62 downto 52);
    trunc_ln121_1_fu_449_p4 <= convFPGA_read_reg_550(63 downto 2);
    trunc_ln121_fu_446_p1 <= convFPGA_read_reg_550(2 - 1 downto 0);
    trunc_ln3_fu_427_p4 <= numIter_read_reg_545(63 downto 2);
    trunc_ln65_fu_376_p1 <= bitcast_ln65_fu_363_p1(52 - 1 downto 0);

    vp_address0_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_address0, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            vp_address0 <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vp_address0 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_address0;
        else 
            vp_address0 <= "XXXXXXXX";
        end if; 
    end process;


    vp_ce0_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_ce0, grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            vp_ce0 <= grp_kernel_Pipeline_VITIS_LOOP_88_4_VITIS_LOOP_90_5_fu_237_vp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vp_ce0 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_ce0;
        else 
            vp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vp_we0_assign_proc : process(grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vp_we0 <= grp_kernel_Pipeline_VITIS_LOOP_69_2_VITIS_LOOP_71_3_fu_226_vp_we0;
        else 
            vp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln121_1_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln121_reg_641),4));
    zext_ln121_2_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln121_1_fu_510_p3),25));
    zext_ln121_3_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln121_2_reg_680),32));
    zext_ln121_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln121_fu_493_p2),25));
    zext_ln62_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_1_reg_622),32));
end behav;
