-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_sin_33_6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x_val : IN STD_LOGIC_VECTOR (32 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (28 downto 0) );
end;


architecture behav of kernel_sin_33_6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv35_1B7812AEF : STD_LOGIC_VECTOR (34 downto 0) := "00110110111100000010010101011101111";
    constant ap_const_lv73_A2F9836E4E : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000001010001011111001100000110110111001001110";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv35_3243F6A88 : STD_LOGIC_VECTOR (34 downto 0) := "01100100100001111110110101010001000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";

attribute shreg_extract : string;
    signal sign0_fu_75_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sign0_reg_267_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sign0_reg_267_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal kint_reg_272 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_reg_277 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln68_fu_120_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln68_reg_284 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln251_1_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_1_reg_289_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal z_fu_201_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal z_reg_294 : STD_LOGIC_VECTOR (33 downto 0);
    signal icmp_ln274_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln274_reg_299_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call23 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call23 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call23 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call23 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call23 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call23 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call23 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln68_fu_65_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln68_fu_65_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln64_fu_70_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln64_fu_70_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sub_ln237_fu_81_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal in_fu_87_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln64_fu_70_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal shl_ln_fu_128_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln68_fu_65_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln68_fu_135_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_fu_141_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln68_1_fu_151_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal icmp_ln251_fu_161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln254_fu_155_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_2_fu_187_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal or_ln251_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_177_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln251_fu_197_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln274_fu_224_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln_fu_214_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln1_fu_230_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln274_fu_240_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln274_1_fu_247_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal sub_ln292_fu_254_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal x_val_int_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln64_fu_70_p00 : STD_LOGIC_VECTOR (72 downto 0);
    signal mul_ln68_fu_65_p00 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_cordic_circ_apfixed_35_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        z_read : IN STD_LOGIC_VECTOR (33 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (33 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component kernel_mul_6ns_34ns_35_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component kernel_mul_33ns_41ns_73_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (40 downto 0);
        dout : OUT STD_LOGIC_VECTOR (72 downto 0) );
    end component;



begin
    grp_cordic_circ_apfixed_35_3_0_s_fu_60 : component kernel_cordic_circ_apfixed_35_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        z_read => z_reg_294,
        ap_return => grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return,
        ap_ce => grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce);

    mul_6ns_34ns_35_1_1_U3 : component kernel_mul_6ns_34ns_35_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 34,
        dout_WIDTH => 35)
    port map (
        din0 => mul_ln68_fu_65_p0,
        din1 => mul_ln68_fu_65_p1,
        dout => mul_ln68_fu_65_p2);

    mul_33ns_41ns_73_1_1_U4 : component kernel_mul_33ns_41ns_73_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 41,
        dout_WIDTH => 73)
    port map (
        din0 => mul_ln64_fu_70_p0,
        din1 => mul_ln64_fu_70_p1,
        dout => mul_ln64_fu_70_p2);





    x_val_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            x_val_int_reg <= x_val;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln251_1_reg_289 <= icmp_ln251_1_fu_166_p2;
                icmp_ln251_1_reg_289_pp0_iter2_reg <= icmp_ln251_1_reg_289;
                icmp_ln251_1_reg_289_pp0_iter3_reg <= icmp_ln251_1_reg_289_pp0_iter2_reg;
                icmp_ln251_1_reg_289_pp0_iter4_reg <= icmp_ln251_1_reg_289_pp0_iter3_reg;
                icmp_ln251_1_reg_289_pp0_iter5_reg <= icmp_ln251_1_reg_289_pp0_iter4_reg;
                icmp_ln251_1_reg_289_pp0_iter6_reg <= icmp_ln251_1_reg_289_pp0_iter5_reg;
                icmp_ln251_1_reg_289_pp0_iter7_reg <= icmp_ln251_1_reg_289_pp0_iter6_reg;
                icmp_ln274_reg_299 <= icmp_ln274_fu_209_p2;
                icmp_ln274_reg_299_pp0_iter2_reg <= icmp_ln274_reg_299;
                icmp_ln274_reg_299_pp0_iter3_reg <= icmp_ln274_reg_299_pp0_iter2_reg;
                icmp_ln274_reg_299_pp0_iter4_reg <= icmp_ln274_reg_299_pp0_iter3_reg;
                icmp_ln274_reg_299_pp0_iter5_reg <= icmp_ln274_reg_299_pp0_iter4_reg;
                icmp_ln274_reg_299_pp0_iter6_reg <= icmp_ln274_reg_299_pp0_iter5_reg;
                icmp_ln274_reg_299_pp0_iter7_reg <= icmp_ln274_reg_299_pp0_iter6_reg;
                k_reg_277 <= mul_ln64_fu_70_p2(68 downto 67);
                kint_reg_272 <= mul_ln64_fu_70_p2(72 downto 67);
                sign0_reg_267 <= sign0_fu_75_p2;
                sign0_reg_267_pp0_iter1_reg <= sign0_reg_267;
                sign0_reg_267_pp0_iter2_reg <= sign0_reg_267_pp0_iter1_reg;
                sign0_reg_267_pp0_iter3_reg <= sign0_reg_267_pp0_iter2_reg;
                sign0_reg_267_pp0_iter4_reg <= sign0_reg_267_pp0_iter3_reg;
                sign0_reg_267_pp0_iter5_reg <= sign0_reg_267_pp0_iter4_reg;
                sign0_reg_267_pp0_iter6_reg <= sign0_reg_267_pp0_iter5_reg;
                sign0_reg_267_pp0_iter7_reg <= sign0_reg_267_pp0_iter6_reg;
                trunc_ln68_reg_284 <= trunc_ln68_fu_120_p1;
                z_reg_294 <= z_fu_201_p3;
            end if;
        end if;
    end process;
    add_ln68_fu_135_p2 <= std_logic_vector(unsigned(shl_ln_fu_128_p3) + unsigned(mul_ln68_fu_65_p2));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= 
        select_ln274_1_fu_247_p3 when (sign0_reg_267_pp0_iter7_reg(0) = '1') else 
        sub_ln292_fu_254_p2;

    grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34)) then 
            grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce <= ap_const_logic_1;
        else 
            grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln251_1_fu_166_p2 <= "1" when (k_reg_277 = ap_const_lv2_1) else "0";
    icmp_ln251_fu_161_p2 <= "1" when (k_reg_277 = ap_const_lv2_3) else "0";
    icmp_ln274_fu_209_p2 <= "1" when (k_reg_277 = ap_const_lv2_0) else "0";
    in_fu_87_p3 <= 
        x_val_int_reg when (sign0_fu_75_p2(0) = '1') else 
        sub_ln237_fu_81_p2;
    mul_ln64_fu_70_p0 <= mul_ln64_fu_70_p00(33 - 1 downto 0);
    mul_ln64_fu_70_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_fu_87_p3),73));
    mul_ln64_fu_70_p1 <= ap_const_lv73_A2F9836E4E(41 - 1 downto 0);
    mul_ln68_fu_65_p0 <= mul_ln68_fu_65_p00(6 - 1 downto 0);
    mul_ln68_fu_65_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kint_reg_272),35));
    mul_ln68_fu_65_p1 <= ap_const_lv35_1B7812AEF(34 - 1 downto 0);
    or_ln251_fu_171_p2 <= (icmp_ln251_fu_161_p2 or icmp_ln251_1_fu_166_p2);
    r_fu_141_p4 <= add_ln68_fu_135_p2(34 downto 1);
    select_ln274_1_fu_247_p3 <= 
        trunc_ln_fu_214_p4 when (icmp_ln274_reg_299_pp0_iter7_reg(0) = '1') else 
        select_ln274_fu_240_p3;
    select_ln274_fu_240_p3 <= 
        trunc_ln_fu_214_p4 when (icmp_ln251_1_reg_289_pp0_iter7_reg(0) = '1') else 
        trunc_ln1_fu_230_p4;
    shl_ln_fu_128_p3 <= (trunc_ln68_reg_284 & ap_const_lv7_0);
    sign0_fu_75_p2 <= "1" when (signed(x_val_int_reg) > signed(ap_const_lv33_0)) else "0";
    sub_ln237_fu_81_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(x_val_int_reg));
    sub_ln254_fu_155_p2 <= std_logic_vector(unsigned(ap_const_lv35_3243F6A88) - unsigned(zext_ln68_1_fu_151_p1));
    sub_ln274_fu_224_p2 <= std_logic_vector(unsigned(ap_const_lv34_0) - unsigned(grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return));
    sub_ln292_fu_254_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(select_ln274_1_fu_247_p3));
    tmp_1_fu_177_p4 <= sub_ln254_fu_155_p2(34 downto 1);
    tmp_2_fu_187_p4 <= add_ln68_fu_135_p2(34 downto 2);
    trunc_ln1_fu_230_p4 <= sub_ln274_fu_224_p2(33 downto 5);
    trunc_ln68_fu_120_p1 <= in_fu_87_p3(28 - 1 downto 0);
    trunc_ln_fu_214_p4 <= grp_cordic_circ_apfixed_35_3_0_s_fu_60_ap_return(33 downto 5);
    z_fu_201_p3 <= 
        tmp_1_fu_177_p4 when (or_ln251_fu_171_p2(0) = '1') else 
        zext_ln251_fu_197_p1;
    zext_ln251_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_187_p4),34));
    zext_ln68_1_fu_151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_141_p4),35));
end behav;
